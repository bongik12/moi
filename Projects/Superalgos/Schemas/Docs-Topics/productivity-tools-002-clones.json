{
    "topic": "Productivity Tools",
    "pageNumber": "2",
    "type": "Clones",
    "definition": {
        "text": "The clone feature is designed to produce copies of data structures when you need to replicate structures of nodes and expect the copies to behave similarly to the original.",
        "updated": 1615832633335
    },
    "paragraphs": [
        {
            "style": "Title",
            "text": "Introduction",
            "updated": 1611490329180
        },
        {
            "style": "Text",
            "text": "We will analyze the case of clones under the same lens we analyzed how backups work: we will study how clones treat outgoing, incoming and internal references."
        },
        {
            "style": "Note",
            "text": "Unlike backups, clones behave in the same way independently of the existence of the original structure of nodes in the workspace, therefore, we will not make such distinction in the following paragraphs.",
            "updated": 1615832413196
        },
        {
            "style": "Title",
            "text": "Outgoing References"
        },
        {
            "style": "Callout",
            "text": "Outgoing references are kept intact."
        },
        {
            "style": "Text",
            "text": "Pretty much like with backups, a clone preserves outgoing references."
        },
        {
            "style": "Text",
            "text": "The same example as with backups apply: cloning a Task running a Backtesting Session produces a copy of the Task with the Trading Process Instance maintaining the reference to the Trading Bot Multi-Period process, Trading Session Reference maintaining the reference to the corresponding Trading System, and the Trading Engine Reference keeping the reference to the Trading Engine hierarchy.",
            "updated": 1615832824246
        },
        {
            "style": "Gif",
            "text": "GIFs/Superalgos/Docs/design-space/clones-01.gif",
            "updated": 1611490442818
        },
        {
            "style": "Title",
            "text": "Incoming References"
        },
        {
            "style": "Callout",
            "text": "Incoming references are discarded."
        },
        {
            "style": "Text",
            "text": "Letâ€™s go back to the example of a Trading System, like we did when exploring backups:",
            "updated": 1615838266411
        },
        {
            "style": "Gif",
            "text": "GIFs/Superalgos/Docs/design-space/clones-02.gif",
            "updated": 1611490471957
        },
        {
            "style": "Text",
            "text": "The capture above shows that restoring a clone of a trading system does not restore incoming references, even when the original structure of nodes is deleted before restoration."
        },
        {
            "style": "Title",
            "text": "Internal References"
        },
        {
            "style": "Callout",
            "text": "Internal references are kept intact."
        },
        {
            "style": "Text",
            "text": "Going back to the shapes node example, the capture below shows how restoring a clone keeps internal references intact:",
            "updated": 1615838297924
        },
        {
            "style": "Gif",
            "text": "GIFs/Superalgos/Docs/design-space/clones-03.gif",
            "updated": 1611490496345
        },
        {
            "style": "Title",
            "text": "Conclusion"
        },
        {
            "style": "Text",
            "text": "The clone feature is designed to produce copies of data structures when you need to replicate nodes and expect the copies to behave similarly to the original."
        },
        {
            "style": "Text",
            "text": ""
        }
    ]
}